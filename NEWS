TODOs in approximate order of importance (higher is more important).

ASK JS GUYS: grey after mouseout on ff?

DSL: customizable alpha/color/size/fill/linetype for selected geoms,
using selected.alpha, selected.color, etc aesthetics, see
examples/Climate-selected.R. The first implementation should only
allow this at the geom level,
e.g. geom_point(aes(clickSelects=var),selected.color="red") means to
plot a bunch of points which are black if not selected and red if
selected. In ggplot2-0.9.3.1, selected.color thus defined can be
accessed as layer$stat_params$selected.color. In the future we can try
an implementation at the aes level,
e.g. geom_point(aes(clickSelects=var1,selected.color=var2)) means
black if not selected and scale[var2] if selected. NOTE: should
maintain compatibility with existing code, which assumes
selected.color="black" and color="transparent" for
e.g. geom_rect(aes(fill=numeric, clickSelects=id)) and otherwise,
selected.alpha=1 and alpha=1/2.

OPTIMIZATION: Why does it take so much memory to compile large data?
e.g. My computer has 12GB RAM but starts swapping when I try to
compile examples/vervet.R.

OPTIMIZATION: Profile animint2dir() to see what part is slow, and speed
it up! e.g. the last viz in
https://github.com/tdhock/animint-examples/blob/master/examples/scaffolds.R
took 15 minutes to compile on my computer.

OPTIMIZATION: to save disk space, we can compress the TSV file
database to .tsv.gz files. But for this to work with
d3.tsv("path/to/file.tsv.gz"), we need a web server that serves .gz
files with the Content-Encoding: gzip header -- is this possible with
standard web servers? With servers like gist.github.com, all .json
files are served with Content-Encoding: gzip, so they use
http://en.wikipedia.org/wiki/HTTP_compression over the network. In
firefox Inspect Element -> network it seems like they do not compress
.tsv files. In curl it seems like it depends on the --compress flag

thocking@silene:~/projects/chip-seq-paper(master*)$ curl --compress -# --head https://gist.githubusercontent.com/tdhock/914ab9c19038cae238a4/raw/geom10_rect_profiles_chunk9.tsv |grep Content-Encoding

Content-Encoding: gzip
thocking@silene:~/projects/chip-seq-paper(master*)$ curl -# --head https://gist.githubusercontent.com/tdhock/914ab9c19038cae238a4/raw/geom10_rect_profiles_chunk9.tsv |grep Content-Encoding

thocking@silene:~/projects/chip-seq-paper(master*)$ curl --compress -# --head https://gist.githubusercontent.com/tdhock/914ab9c19038cae238a4/raw/plot.json |grep Content-Encoding

Content-Encoding: gzip
thocking@silene:~/projects/chip-seq-paper(master*)$ curl -# --head https://gist.githubusercontent.com/tdhock/914ab9c19038cae238a4/raw/plot.json |grep Content-Encoding

thocking@silene:~/projects/chip-seq-paper(master*)$ 

DSL: Allow other variable names for the same selection variable,
e.g. insert and insert.show are 2 different columns in
data=other.inserts, but they should both use the "insert" selection
variable, in geom_point(aes(clickSelects=insert,
showSelected=insert.show, data=other.inserts). See the example in
https://github.com/tdhock/animint-examples/blob/master/examples/scaffolds.R#L65

DSL: after clicking and changing the displayed data subset,
zoom/update the axes of related plots. For animations we clearly want
to keep the same axes across animation frames, but for some other
kinds of plots it would be nice if the axes automatically zoomed. Make
this an option theme_animint(updateAxes=c("x", "y")) which means that
both the x and y axes should be updated. There should also be a button
next to each axis that you can click to toggle zooming on and off. The
compiler would have to look at every showSelected subset and compute
the axes ranges for each.

RENDER: it would be nice to zoom by dragging a rectangle on the plot
background, as in plotly. Then double-click to zoom back out.

RENDER: It would be nice to be able to resize plots interactively,
like we can do in shiny+ggvis.

DSL: multiple selection! currently, each interaction variable can
only have a single selected value at a time, e.g. year=1996 and
country=Japan in the WorldBank viz. In the future, we should be able
to declare each interaction variable as either single or multiple
selection using an option list: selection=list(year="single",
country="multiple"). If this option list is not specified, the
compiler should infer a default: multiple selection for interaction
variables with only clickSelects and no showSelected elements (like
country in the WorldBank viz), and single selection for interaction
variables with showSelected elements (like year in the WorldBank
viz). The interface to multiple selection should be simple: click a
country to toggle the selection state from off to on.

RENDER: Legends can be interactive: clicking a legend entry
shows/hides that subset of data. For example, when we say
aes(color=variable), this should imply aes(showSelectedColor=variable)
on that geom, and selection=list(variable="multiple") on that plot.

RENDER: Easy legend decoding: draw an arrow next to the legend entry
for the value of the element that the mouse is hovering over, e.g.
http://www.highcharts.com/maps/demo/map-drilldown/dark-unica

RENDER: For each selector variable, render a widget for selecting values:
- single selection variable: <select> or <input type="radio">
- multiple selection categorical variable: <input type="checkbox">
- multiple selection numeric/datetime variable: crossfilter.js
http://square.github.io/crossfilter/
Currently, it is only possible to change the selection by clicking on
data points/lines, not widgets. To implement that you would probably
just have to add a few lines of JavaScript code to add the widgets,
right after the plot meta-data is loaded, in add_selector
https://github.com/tdhock/animint/blob/master/inst/htmljs/animint.js#L261. Also
for an example of adding a button to the web page in JavaScript, see
https://github.com/tdhock/animint/blob/master/inst/htmljs/animint.js#L1114.

DSL: For each widget selector, should we show all available values,
or just the values that are clickable onscreen? Or both? This may be
specified by the designer using an option
widgets=list(var1="onscreen", var2="all", var3="both").

DSL: To accomplish interactivity like in this plot
http://kbroman.github.io/qtlcharts/assets/chartexamples/iplotMScanone_example.html
we could write geom_tile(aes(hoverSelects=var)) which means that the
selected value of var should be changed when the user hovers the mouse
over any tile. Raise an error if hoverSelects is used with multiple
selection. For the viz below 
http://cpsievert.github.io/LDAvis/newsgroup/newsgroup.html
we could write geom_point(aes(hoverSelects=var, clickSelects=var))
There are thus two kinds of hoverSelects: when you hover away from a
geom, (1) select the previous value or (2) keep the same value. We
could use two different aesthetics: aes(hoverSelectsSticky) and
aes(hoverSelectsLast). Or we could use a geom-level option
geom_point(aes(hoverSelects=var), onMouseOut="selectLast") or
geom_point(aes(hoverSelects=var), onMouseOut="keepSelection"). Or we
could infer a default: aes(hoverSelects=var) implies (2) and
aes(hoverSelects=var, clickSelects=var) implies (1). Which of these 3
methods should we use to define hoverSelects interactivity?

GGPLOT: theme(legend.position)

DSL: aes(tooltip=text) for specifying the text to show when you hover
the mouse over something, e.g. issue #1.

DSL: option list(layout=matrix of plot names) means render plots in an
html table instead of in a line.

EXAMPLE: pirates data: world map?

EXAMPLE: US state population since 1790, compare w/ other countries?
http://en.wikipedia.org/wiki/List_of_U.S._states_by_historical_population
http://fr.wikipedia.org/wiki/Histoire_d√©mographique_de_la_France
http://www.populstat.info/Asia/japanc.htm
http://www.populstat.info/Americas/canadac.htm

RENDER: Is it possible to fix geom_rect and geom_text alignment? The
underlying problem is that there is no equivalent of R's vjust in SVG
(the equivalent of R's hjust=0.5|1|0 is CSS text-anchor:
middle|end|start). See examples/align_rect_text.R.

DSL: if there was no duration specified, should
time=list(variable=2000) imply duration=list(variable=1000)?

DSL: geom_tallrect(aes(xmin=chromStart, xmax=chromEnd,
fill=annotation), edit=TRUE) means that we would like to interactively
edit the data in this geom. In particular it means that the specified
aesthetics may be edited by the user (xmin, xmax, fill) but the
non-specified aesthetics may not (e.g. color in the example
above). Save each TSV file with an _animint_id column which is unique
for each drawn element. Start a web server that accepts POST requests
and can edit the TSV files appropriately. This will probably take a
lot of work, and a lot of geom-specific interactive editing code, so
it is more of a research project than a feature request.

RENDER: Should we download all data in the background, even for
non-animated plots? I have started some work on the loadall branch,
but the preliminary answer is NO -- the browser freezes and the plot
does not respond to mouse clicks while the data is loading.

OUTPUT: animint2shiny(ggList) renders the interactive animation as a shiny
app, e.g.
https://github.com/tdhock/interactive-tutorial/tree/master/animation/WorldBank

OUTPUT: "shiny widgets" -- I guess it should be possible and useful to
edit things like the variable plotted on the x/y axis, for example in
the WorldBank data viz, instead of writing
geom_point(aes(x=life.expectancy)) we could write
geom_point(aes_string(x=input$xvar)) with selectInput('xvar', 'X
Variable', names(dataset))). However I fear that it may end up not
being very responsive, since the animint would have to be re-compiled
by the shiny server after every change to the shiny input.

2014.8.14

GGPLOT: facet_* and coord_fixed are now fully functional.

2014.6.10

Restore support for numeric legends.

2014.6.2

DSL: Custom title for the generated HTML page using option
title="TITLE". This title is also used for the animint2gist
description.

DSL: aes(href=sprintf("http://genome.ucsc.edu/%s", id)) to have
clicking open a new web browser tab at that URL.

OUTPUT: gg2animint is now deprecated, use animint2dir instead.

animint2gist now checks for and ignores directories and files of size
0, which were causing
Error: client error: (422) Unprocessable Entity (WebDAV; RFC 4918)

2014.5.22

All tests are now working.

The animist2gist function posts relevant files as a gist and allows
one to automatically view/share plots via http://bl.ocks.org

Moved a number of packages from DEPENDS to IMPORTS 
(except for ggplot2 and proto). Also added gistr to SUGGESTS 
as it is needed for animist2gist.

2014.5.17

Fixed the "too many legend entires" bug. For more info,
see the commit that introduced the bug  (and the note on
why it doesn't work)

https://github.com/tdhock/animint/commit/069c167117c169dea9277608e8a0cbed3c75fcff

2014.5.16

The new knit_print.animint function tells knitr how to print
objects of class "animint". This allows one to embed multiple
animint plots in a single HTML via R Markdown and knitr. This
is currently only possible with the dev version of knitr,
but this won't be a problem when v1.6 is released to CRAN

2014.5.15

Use a local file server if the servr package is installed.

2014.5.9

Download progress table at the bottom of the plot.
- click a button to show or hide the entire table.

BUGFIX: geom_rect(size=0) is now correctly translated to
<rect style="stroke-width: 0;">.

2014.5.5

duration=list(complexity.i=2000) means a smooth transition over 2
seconds ONLY when the complexity.i selector is updated. e.g. for
geom_ribbon(aes(showSelected=sample1, showSelected2=sample2,
showSelected3=complexity.i, showSelected4=set.name), this means that
there should be no smooth transition when we click to update sample1,
sample2, or set.name. See
https://github.com/tdhock/animint-examples/blob/master/examples/chip.seq.R

Specify aes(key=variable) for constancy in transitions:
http://bost.ocks.org/mike/constancy/ I found a real data set where
this is necessary:
https://github.com/tdhock/animint-examples/blob/master/examples/chip.seq.R

2014.4.30

The designer can specify chunk variables via
geom_line(aes(showSelected=var1, showSelected2=var2,
showSelected3=var3), chunk_vars=c("var1", "var2")).

2014.4.28

scale_x_continuous(LABEL) specifies the x axis label. Previously, we
could only use xlab(LABEL).

2014.4.25

theme_animint(width=600, height=600) instead of option lists which
make us repeat the plot names... I made
tdhock/ggplot2@98cefe4d653ce8f214177b66dc030c2f3c725ffb which lets you
say theme(validate=FALSE) to avoid calling validate_element. This
works with tdhock/animint@c4ff92d8c4edf523d20c6022fb3b515b19974b8b and
I submitted an issue https://github.com/hadley/ggplot2/issues/938 and
pull request.

2014.4.22

BUGFIX: the geom drawing order is respected now, even if there are
some geoms which are absent for the current selection. This is
implemented by putting the geoms on each layer in a g element with
class e.g. geom7_vline_scatter. The g element is initialized on plot
startup, and never is deleted, even if there are 0 geoms in the
current selection.

BUGFIX: in the JavaScript, when there are zero groups of line/ribbon
data to display for the current selection, just draw nothing (before
there was an error since the code was written as though there was 1
instead of 0 groups).

2014.4.16

BUGFIX: toJSON gives an infinite recursion error for converting R
functions to JSON, and R functions are sometimes used as ggplot
params/stat_params. But we do not want to pass these to JSON anyway,
so we just ignore them.

2014.4.7

BUGFIX: make_text now works even if it appears before/after certain
other data. See examples/make_text_bug.R

The default/first selection can be specified by an option
first=list(year=1960, country=c("Japan", "United States"). Stop with
an error if multiple values are specified for a single selection
variable.

BUGFIX: Animation now works even for non-numeric variables,
e.g. examples/canada-cities.R.

For animations, start downloading the next chunk for that geom, until
all data is loaded, even if it is not needed on screen right now.

For large data sets such as the scaffold data, breaking the CSV
database from 21 to 94032 CSV files resulted in a 10x increase
in disk space usage (but faster loading of the first data subset),
for 653018 rows of data. Forcing max 1 chunk variable means only
18045 CSV files which is more space/time efficient. Also, plot.json
only stores the chunk ids, not the full filenames (less repetition).
thocking@silene:~/projects/scaffold-viz$ ls boxes-nochunks|grep csv|wc -l
21
thocking@silene:~/projects/scaffold-viz$ ls boxes-fewer-chunks|grep tsv|wc -l
18045
thocking@silene:~/projects/scaffold-viz$ ls boxes-chunks|grep tsv|wc -l
94032
thocking@silene:~/projects/scaffold-viz$ du -hs boxes-*chunks
45M	boxes-nochunks
99M	boxes-fewer-chunks
400M	boxes-chunks
I uploaded these visualizations and timed page loading in chromium:
http://cbio.ensmp.fr/~thocking/scaffold-viz5/ 44.1MB transferred 27.95 s
transfers ALL the data. slow part is 3 csv files, each around 13 MB.
http://cbio.ensmp.fr/~thocking/boxes-fewer-chunks/
transfers only the first subset. 5.6MB transferred 7.73 s.
plot.json is only 304KB, slow part is 1.6MB geom7_point_box_chunk1057.tsv.
http://cbio.ensmp.fr/~thocking/boxes-chunks/ 12.1MB transferred 9.61 s
transfers only the first subset. slow part is 8.7MB plot.json.

2014.4.4

Download progress table at the bottom of the plot.
- row for every geom.
- columns: geom, selected chunk, status, downloaded, total.

BUGFIX: stop with an error if width or height list contains plot names
that do not exist!

BUGFIX: when there are commas in text labels, animint.js now parses
the data correctly, since we use tsv instead of csv. See
examples/align_rect_text.R.

Speedy web page loading: on compile, divide data into chunks ---
separate csv files. In general a chunk of data will be shown onscreen
at the same time, but we should not make chunks with only 1 row
e.g. for the WorldBank viz, geom_points should have 1 chunk per year,
geom_text country labels should have 1 chunk per country, and
geom_text year labels should have just 1 chunk which covers all
years. On page load, start downloading the first chunk for each geom.

2014.3.19

For geoms with fill=a numeric variable, changing the opacity changes
how we interpret the colors, so for these geoms, show selection by
changing the stroke instead.

2014.3.13

scale_size_animint

2014.2.24

vervet data.

2014.01.27

allow specifying guide="none" in ggplot2 scales that would generate a
legend.

2013.11.22

Test for warnings.

Warn when 0-sized geoms are produced, since they will be invisible.

Do not sort NULL during check for animation values, to avoid warning.

2013.11.19

draw colored, sized "a" in legend for geom_text.

geom_text(aes(size)) is resized using e.g. <text font-size="10">

2013.11.15

Bugfix: filter NaN before passing data to lineThing to avoid hiding an
entire line if only one element is NA.

2013.10.23

Include 1 animint in a knitr Rmd document when processed in the same
directory.

Generate documentation example web site.

Bugfix for geom_point(colour=constant).

2013.10.15

Hide only y axis and not x axis if axis.text.y=element_blank(), etc.

2013.10.4

Bugfixes for geom_ribbon(aes(fill=variable)) and
geom_text(aes(color=variable)).

2013.9.26

Update R/JS comments from emails to Susan.

gg2animint examples are animated and interactive.

2013.8.29
Implementation of geom_hex with relevant examples and documentation.

2013.8.15
Updated package requirements (MASS, reshape2, maps)
Updated documentation to include warnings about using google chrome with animint


2013.7.29
Fix for significant digits issue with clickSelects - fixed by exporting 
as character into JSON file, then importing and converting to numerals.

Axes can now be removed for maps

2013.7.26

bugfix for animations: before, we assumed that the animation variable
takes values in 1..n, but now this is treated properly by looking at
the actual values.

make_text for quick labels.

make_*(data, ...)

WARNING when stat_bin is used to put several clickSelects or
showSelected values in the same bin!

